https://scrimba.com/articles/react-interview-questions/#what-is-jsx

- Что такое JSX?
JavaScript XML (JSX) - это расширение JavaScript, понятное только препроцессорам вроде Babel.
После обнаружения препроцессором этот HTML-подобный текст преобразуется в 
обычные вызовы функций React.createElement: 
React.createElement (
   MyBotton, 
   {color: 'blue', shadowSize: 2},
   'Click me'
 )
JSX — это синтаксический сахар для React.createElement функции.

- Можно ли использовать React без JSX?
Одним словом, да.
JSX не является частью спецификации ECMAScript , поэтому ни один веб-браузер не понимает JSX.
JSX — это синтаксический сахар для React.createElementфункции, означающий, что 
вы можете вызывать ее React.createElement напрямую.

- Настоящий ДОМ
Прежде всего, DOM означает «объектная модель документа». 
DOM простыми словами представляет собой пользовательский интерфейс вашего приложения. 
Каждый раз, когда происходит изменение состояния пользовательского интерфейса вашего приложения, 
DOM обновляется, чтобы отразить это изменение. 
Теперь загвоздка в том, что частые манипуляции с DOM влияют на производительность, замедляя ее.

- Что такое виртуальный DOM? Как React использует виртуальный DOM для рендеринга пользовательского интерфейса?
Виртуальный DOM — это виртуальное представление реального DOM.

React следует наблюдаемому шаблону и прослушивает изменения состояния. 
Когда состояние компонента изменяется, React обновляет виртуальное дерево DOM. 
После обновления виртуального DOM React сравнивает текущую версию виртуального DOM с 
предыдущей версией виртуального DOM. 
Этот процесс называется дифференцировать

Как только React узнает, какие виртуальные объекты DOM изменились, 
React обновляет только эти объекты в реальном DOM. 
Это значительно повышает производительность по сравнению с прямым управлением реальным DOM. 
Функция render() — это точка входа, в которой создается дерево элементов React.

- Является ли виртуальный DOM таким же, как теневой DOM?
Одним словом, нет.
В то время как виртуальный DOM — это концепция программирования, реализованная React 
преимущественно для повышения производительности рендеринга, 
Shadow DOM — это технология браузера, предназначенная для 
определения области видимости переменных и CSS в веб-компонентах.

- Когда рендерится компонент?
Для рендеринга React-элемента, сперва передаем DOM-элемент в ReactDOM.createRoot(), 
далее передаем с React-элементом в root.render():

const root = ReactDOM.createRoot(
  document.getElementById('root')
);
const element = <h1>Hello, world</h1>;
root.render(element);

- Как не рендерить при смене props? (не зовсім впевнений в правильності питання)
const MyComponent = React.memo(function MyComponent(props) {
  /* render using props */
});
React.memoявляется компонентом более высокого порядка .

Если ваш компонент отображает один и тот же результат с теми же реквизитами, 
вы можете React.memoв некоторых случаях обернуть его вызовом для повышения производительности, 
запомнив результат. 
Это означает, что React пропустит рендеринг компонента и повторно использует последний результат рендеринга.

- Можно ли использовать стрелочные функции в методах рендеринга?
Вообще говоря, да, это нормально, и часто это самый простой способ передать параметры функциям обратного вызова.
Если у вас есть проблемы с производительностью, обязательно оптимизируйте!

- Как передать значение от родителя к дочернему?
Через пропсы.

- Как вы передаете значение от дочернего к родительскому?
Передать дочернему свойству функцию (например setValue), которую ребенок может вызвать.
const [value, setValue] = useState('');

- Что такое prop drilling (опорное бурение)?
Это то, что происходит, когда вы передаете реквизит более чем на два компонента в глубину, 
а второй компонент на самом деле не нуждается в данных (он просто передает их).
По своей сути не является плохим, обычно есть более красноречивые и удобные решения, 
такие как использование React Context.

- Может ли дочерний компонент изменять свои props?
Компонент может обновлять свое собственное состояние, но не может обновлять свои props.

- Как вы передаете значение от одного брата к другому?
Поднимать общее состояние до их ближайшего общего предка

- Ключи
Ключи помогают React определить, какие элементы были изменены, добавлены или удалены. 
Ключи должны быть переданы элементам внутри массива, чтобы придать элементам стабильную идентичность.



















